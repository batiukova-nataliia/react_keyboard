{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","notPressed","handleDocumentClick","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAQaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,GACZC,YAAY,GAHhB,EAMEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,YAAY,IAE5B,EAAKG,SAAS,CAAEJ,WAAYG,EAAME,OATtC,uDAYE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAb5C,kCAgBE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAjB/C,oBAoBE,WACE,MAAmCM,KAAKT,MAAhCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAEpB,OACE,qBAAKS,UAAU,MAAf,SACGT,EACG,mBAAGS,UAAU,eAAb,iCAEA,oBAAGA,UAAU,eAAb,sCAEGV,EAFH,aA5BZ,GAAyBW,a,MCHzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c98353ab.chunk.js","sourcesContent":["/* eslint-disable react/sort-comp */\nimport { Component } from 'react';\n\ntype State = {\n  keyPressed: string,\n  notPressed: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    keyPressed: '',\n    notPressed: true,\n  };\n\n  handleDocumentClick = (event: KeyboardEvent) => {\n    this.setState({ notPressed: false });\n\n    this.setState({ keyPressed: event.key });\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentClick);\n  }\n\n  render() {\n    const { keyPressed, notPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        {notPressed\n          ? <p className=\"App__message\">Nothing pressed yet</p>\n          : (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {keyPressed}\n              ]\n            </p>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}